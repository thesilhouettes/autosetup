#! /usr/bin/env bash
warning() {
	# remind users to install sudo and pacman first
	dialog --title "Warning!" --clear --yes-label "Continue" --no-label "Quit" --yesno " \
This script may destory or screw up important directories, \
or setup dotfiles and programs that you hate. Please read the script first and \
package list first, and change them if needed." 16 60
	clear
}

preparation() {
	echo "Syncing and updating everything..."
	sudo pacman -Syyuu
	# install necessary programs for other packages
	echo "Installing dialog, git and base-devel for this script... (if they are not installed)"
	sudo pacman --needed -S git dialog base-devel || return 1
	echo "Installed"

	# install yay
	echo "Now installing yay..."
	git clone https://aur.archlinux.org/yay.git >/dev/null
	cd yay || return 1
	makepkg -si

}

preinstall_warning() {
	dialog --title "Warning!" --clear --yes-label "Continue" --no-label "Quit" --yesno " \
Now. This script will go through every line in the package list and install \
them. Are you sure you like all of them? If not please quit." 16 60
	clear
}

DOTFILES_URL=${DOTFILES_URL:-https://github.com/thesilhouettes/dotfiles}
BARE_REPO_DIR=${BASE_REPO_DIR:-$HOME/.dotfiles}

fetch_dotfiles() {
	if dialog --title "Warning!" --clear --yes-label "Yes" --no-label "No" --yesno " \
Remove ~/.dotfiles, ~/.config, ~/.local/share and ~/.zprofile before fetching \
dotfiles?" 16 60; then
		rm -rf "$HOME/.dotfiles" "$HOME/.config" "$HOME/.zprofile"
		"$HOME/.local/share"
	fi
	clear
	# fetch dotfiles from thesilhouette repository
	git clone --bare "$DOTFILES_URL" "$HOME/.dotfiles"
	git --git-dir="$BARE_REPO_DIR" --work-tree="$HOME" checkout
	git --git-dir="$BARE_REPO_DIR" --work-tree="$HOME" config --local status.showUntrackedFiles no
}

install_packages() {
	# installation loop: read from the pkglist.txt file
	echo "Now installing files from mainpkgs.txt with pacman"
	sudo cat mainpkgs.txt | pacman --needed -S -

	# installing progarms that are not in main repository
	echo "Now installing files aurpkgs.txt with yay"
	yay --needed -S - <aurpkgs.txt

}
additional_setup() {
	# modify system configs etc.
	if dialog --title "Ibus Variables!" --clear --yes-label "Sure" --no-label "No" --yesno " \
Ibus need severeal system environmental variables to work. Do you want to add
  them to /etc/environment?" 16 60; then
		cat <<EOF | sudo tee -a /etc/environment >/dev/null
    # for ibus
    GTK_IM_MODULE=ibus
    QT_IM_MODULE=ibus
    XMODIFIERS=@im=ibus
EOF
	fi
	if
		dialog --title "Asus Gaming Laptop" --clear --yes-label "Yes" --no-label \
			"No" --yesno " \
Are you using the Asus Zephyrus G14 gaming laptop? If yes, this script will \
    install some additional packages and enable services." 16 60
	then

		# append /etc/pacman.conf with repository
		echo "Adding Asus Linux repository to pacman..."
		sudo cat <<EOF | sudo tee -a /etc/pacman.conf >/dev/null
[g14]
SigLevel = DatabaseNever Optional TrustAll
Server = https://arch.asus-linux.org
EOF

		# installing necessary programs
		echo "Installing asusctl, supergfxctl, nvidia utils and custom kernel..."
		sudo pacman -Syu asusctl supergfxctl nvidia-dkms nvidia-utils \
			lib32-nvidia-utils nvidia-prime linux-g14 linux-g14-headers
		sudo systemctl enable --now power-profiles-daemon.service
		sudo systemctl enable --now supergfxd.service

		# enable mic button
		dialog --title "Asus Gaming Laptop" --clear --yes-label "Yes" --no-label \
			"No" --yesno " \
    Do you want to enable the mic button?" 16 60
		sudo cat <<EOF | sudo tee -a /etc/udev/hwdb.d/90-nkey.hwdb
    evdev:input:b0003v0B05p1866* KEYBOARD_KEY_ff31007c=f20 # x11 mic-mute
EOF
		sudo systemd-hwdb update
		sudo udevadm trigger
	fi

	# TODO: yay pkgs cores
}

error() {
	printf "%s\n" "$1"
	exit 1
}

final_words() {
	dialog --title "Final Words" --clear --msgbox " \
    Everything is done! Rebooting is recommended." 16 60
	clear
}

### Program

# check if the user is running it as superuser (or sudo)
[ "$(id -u)" -eq 0 ] && error "Please do not run this script as root! Although \
this script requires superuser privileges, it will ask you to enter superuer \
password when the time comes."
preparation || error "Cannot prepare this script!"
warning || error "User exited"
preinstall_warning || error "User bailed!"
install_packages || error "Cannot install some packages!"
fetch_dotfiles || error "Cannot fetch dotfiles and place them in the right place!"
additional_setup || error "Additional Setup Failed"
final_words
